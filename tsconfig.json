{
  "compilerOptions": {
    "target": "esnext", // 指定ECMAScript目标版本
    "module": "esnext", // 指定生成哪个模块系统代码
    "jsx": "preserve",
    "importHelpers": true, // 从 tslib 导入辅助工具函数（比如 __extends， __rest等）
    "moduleResolution": "node", // 决定如何处理模块。
    "experimentalDecorators": true,
    "skipLibCheck": true, // 忽略所有的声明文件（ *.d.ts）的类型检查。
    "esModuleInterop": true, // 解析非相对模块名的基准目录
    "allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
    "sourceMap": true,
    "baseUrl": ".",
    "strict": true,
    "noImplicitAny": false,
    "noImplicitThis": false,
    "types": ["webpack-env", "node"], // 要包含的类型声明文件名列表
    // 模块名到基于 baseUrl的路径映射的列表。
    "paths": {
      "@/*": [
        "src/*"
      ],
      "api/*": [
        "src/api/*"
      ],
      "assets/*": [
        "src/assets/*"
      ],
      "common/*": [
        "src/common/*"
      ],
      "views/*": [
        "src/views/*"
      ],
      "components/*": [
        "src/components/*"
      ],
      "types/*": [
        "src/types/*"
      ]
    },
    // 编译过程中需要引入的库文件的列表。
    "lib": [
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ]
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  "exclude": [
    "node_modules"
  ]
}
